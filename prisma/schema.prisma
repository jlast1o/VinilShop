// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Clients {
  clientId     Int      @id @default(autoincrement()) @map("client_id")
  username     String   @db.VarChar(255)
  password     String   @db.VarChar(255)
  role         String   @db.VarChar(255)
  number       String   @db.VarChar(255)
  address      String   @db.VarChar(255)
  location     String   @db.VarChar(255)
  email        String   @db.VarChar(255)
  contactInfo  String   @db.VarChar(255) @map("contact_information")
  orders       Order[]
  userBasket   userBasket[]
}

model RuProduct {
  ruProductId   Int      @id @default(autoincrement()) @map("ruProduct_id")
  linkToSource  String   @db.VarChar(255)
  name          String   @db.VarChar(255)
  productType   String   @db.VarChar(255)
  size          String   @db.VarChar(255)
  color         String   @db.VarChar(255)
  description   String   @db.VarChar(255)
  slug          String   @db.VarChar(255)
  weight        Float
  buyingPrice   Float
  postToNl      Float
  postToRb      Float
  postToBuyer   Float
  wrapping      Float
  extraFirst    Float   @map("extra_first")
  wrappingSecond Float   @map("wrapping_second")
  selfprice     Float
  selfpriceInRubles Float   @map("selfpriceInRubles")
  sellingPriceInRubles Float   @map("sellingPriceInRubles")
  profit        Float
  orderedProducts OrderedProduct[]
  userBasket       userBasket[]
  photoProds      PhotoProd[]
  shipment Shipment[]
}

model EuProduct {
  euProductId     Int      @id @default(autoincrement()) @map("euProduct_id")
  linkToSource    String   @db.VarChar(255)
  name            String   @db.VarChar(255)
  productType     String   @db.VarChar(255)
  size            String   @db.VarChar(255)
  color           String   @db.VarChar(255)
  description     String   @db.VarChar(255)
  slug            String   @db.VarChar(255)
  weight          Float
  buyingPrice     Float
  postToNl        Float
  postToBuyer     Float
  wrapping        Float
  extraFirst      Float   @map("extra_first")
  selfprice       Float
  sellingPrice    Float
  profit          Float
  orderedProducts OrderedProduct[]
  userBasket       userBasket[]
  photoProds      PhotoProd[]
  shipment Shipment[]
}

model Order {
  orderId      Int      @id @default(autoincrement()) @map("order_id")
  nameOfOrder   String   @db.VarChar(255)
  client       Clients   @relation(fields: [clientId], references: [clientId])
  clientId     Int       @map("client_id")
  status       String   @db.VarChar(255)
  dateOfBuy     DateTime @db.Date @map("dateOfBuy")
  dateOfPreorder DateTime @db.Date @map("dateOfPreorder")
  dateOfFullPay  DateTime @db.Date @map("dateOfFullPay")
  orderedProducts OrderedProduct[]
}

model OrderedProduct {
  orderedProductId Int      @id @default(autoincrement()) @map("orderedProducts_id")
  order           Order   @relation(fields: [orderId], references: [orderId])
  orderId         Int     @map("order_id")
  status          Int
  ruProduct       RuProduct? @relation(fields: [ruProductId], references: [ruProductId])
  ruProductId     Int?       @map("ruProduct_id")
  euProduct       EuProduct? @relation(fields: [euProductId], references: [euProductId])
  euProductId     Int?       @map("euProduct_id")
  trackNumber     Int
}

model userBasket {
  userBasketId Int      @id @default(autoincrement()) @map("userBasket_id")
  client       Clients   @relation(fields: [clientId], references: [clientId])
  clientId     Int      @map("client_id")
  ruProduct     RuProduct? @relation(fields: [ruProductId], references: [ruProductId])
  ruProductId   Int?     @map("ruProduct_id")
  euProduct     EuProduct? @relation(fields: [euProductId], references: [euProductId])
  euProductId   Int?   @map("euProduct_id")
}

model PhotoProd {
  photoId     Int      @id @default(autoincrement()) @map("photo_id")
  ruProduct   RuProduct? @relation(fields: [ruProductId], references: [ruProductId])
  ruProductId Int?
  euProduct   EuProduct? @relation(fields: [euProductId], references: [euProductId])
  euProductId Int?
  linkToPhoto String   @db.VarChar(255)
}


model Shipment {
  shipmentId   Int      @id @default(autoincrement()) @map("shipment_id")
  name         String   @db.VarChar(255)
  ruProduct     RuProduct? @relation(fields: [ruProductId], references: [ruProductId])
  ruProductId   Int?     @map("ruProduct_id")
  euProduct     EuProduct? @relation(fields: [euProductId], references: [euProductId])
  euProductId   Int?     @map("euProduct_id")
}

